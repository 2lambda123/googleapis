# This file was automatically generated by BuildFileGenerator

# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])

exports_files(glob(include = ["*grpc_service_config.json"]))

##############################################################################
# Discovery
##############################################################################
load(
    "@com_google_disco_to_proto3_converter//rules_gapic:disco_to_proto.bzl",
    "gapic_yaml_from_disco",
    "grpc_service_config_from_disco",
    "proto_from_disco",
)

proto_from_disco(
    name = "dns_gen",
    src = "dns.v1.json",
    previous_proto = "dns.proto",
    enums_as_strings = True,
)

grpc_service_config_from_disco(
    name = "dns_grpc_service_config_gen",
    src = "dns.v1.json",
    previous_proto = "dns.proto",
)

gapic_yaml_from_disco(
    name = "dns_gapic_gen",
    src = "dns.v1.json",
    previous_proto = "dns.proto",
)

##############################################################################
# Common
##############################################################################
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_google_googleapis_imports//:imports.bzl", "proto_library_with_info")

proto_library(
    name = "dns_proto",
    srcs = [
        "dns.proto",
    ],
    deps = [
        "@com_google_googleapis//google/api:annotations_proto",
        "@com_google_googleapis//google/api:client_proto",
        "@com_google_googleapis//google/api:field_behavior_proto",
        "@com_google_googleapis//google/api:resource_proto",
        "@com_google_googleapis//google/cloud:extended_operations_proto",
        "@com_google_protobuf//:descriptor_proto",
    ],
)

proto_library_with_info(
    name = "dns_proto_with_info",
    deps = [
        ":dns_proto",
        "@com_google_googleapis//google/cloud:common_resources_proto",
    ],
)

##############################################################################
# Java
##############################################################################
#load(
#    "@com_google_googleapis_imports//:imports.bzl",
#    #"java_gapic_assembly_gradle_pkg",
#    #"java_gapic_library",
#    #"java_gapic_test",
#    #"java_grpc_library",
#    #"java_proto_library",
#)

#java_proto_library(
#    name = "dns_java_proto",
#    deps = [":dns_proto"],
#)

#java_gapic_library(
#    name = "dns_java_gapic",
#    srcs = [":dns_proto_with_info"],
#    gapic_yaml = "dns_gapic.yaml",
#    grpc_service_config = ":dns_grpc_service_config.json",
#    test_deps = [],
#    transport = "rest",
#    deps = [
#        ":dns_java_proto",
#    ],
#)

#java_gapic_test(
#    name = "dns_java_gapic_test_suite",
#    test_classes = [
#        "com.google.cloud.dns.v1.ChangesClientTest",
#        "com.google.cloud.dns.v1.DnsKeysClientTest",
#        "com.google.cloud.dns.v1.ManagedZoneOperationsClientTest",
#        "com.google.cloud.dns.v1.ManagedZonesClientTest",
#        "com.google.cloud.dns.v1.PoliciesClientTest",
#        "com.google.cloud.dns.v1.ProjectsClientTest",
#        "com.google.cloud.dns.v1.ResourceRecordSetsClientTest",
#        "com.google.cloud.dns.v1.ResponsePoliciesClientTest",
#        "com.google.cloud.dns.v1.ResponsePolicyRulesClientTest",
#    ],
#    runtime_deps = [":dns_java_gapic_test"],
#)

## Open Source Packages
#java_gapic_assembly_gradle_pkg(
#    name = "google-cloud-dns-v1-java",
#    transport = "rest",
#    deps = [
#        ":dns_java_gapic",
#        ":dns_java_proto",
#        ":dns_proto",
#    ],
#)

##############################################################################
# Python
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "py_gapic_assembly_pkg",
    "py_gapic_library",
    "py_test",
)

py_gapic_library(
    name = "dns_py_gapic",
    srcs = [
        ":dns_proto",
    ],
    opt_args = [
        "transport=rest",
        "autogen-snippets=False",
    ],
)

py_test(
    name = "dns_py_gapic_test",
    srcs = [
        "dns_py_gapic_pytest.py",
        "dns_py_gapic_test.py",
    ],
    legacy_create_init = False,
    deps = [":dns_py_gapic"],
)

# Open Source Packages
py_gapic_assembly_pkg(
    name = "dns-v1-py",
    deps = [
        ":dns_py_gapic",
    ],
)

##############################################################################
# PHP
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "php_gapic_assembly_pkg",
    "php_gapic_library",
    "php_proto_library",
)

php_proto_library(
    name = "dns_php_proto",
    deps = [":dns_proto"],
)

php_gapic_library(
    name = "dns_php_gapic",
    srcs = [":dns_proto_with_info"],
    grpc_service_config = "dns_grpc_service_config.json",
    service_yaml = "dns_v1.yaml",
    transport = "rest",
    deps = [
        ":dns_php_proto",
    ],
)

# Open Source Packages
php_gapic_assembly_pkg(
    name = "google-cloud-dns-v1-php",
    deps = [
        ":dns_php_gapic",
        ":dns_php_proto",
    ],
)

##############################################################################
# Node.js
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "nodejs_gapic_assembly_pkg",
    "nodejs_gapic_library",
)

nodejs_gapic_library(
    name = "dns_nodejs_gapic",
    package_name = "@google-cloud/dns",
    src = ":dns_proto_with_info",
    extra_protoc_parameters = ["metadata"],
    diregapic = True,
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "dns-v1-nodejs",
    deps = [
        ":dns_nodejs_gapic",
        ":dns_proto",
    ],
)

###############################################################################
# Ruby
###############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "ruby_cloud_gapic_library",
    "ruby_gapic_assembly_pkg",
    "ruby_proto_library",
)

ruby_proto_library(
    name = "dns_ruby_proto",
    deps = [":dns_proto"],
)

ruby_cloud_gapic_library(
    name = "dns_ruby_gapic",
    srcs = [":dns_proto_with_info"],
    extra_protoc_parameters = [
        "ruby-cloud-api-id=dns.googleapis.com",
        "ruby-cloud-api-shortname=dns",
        "ruby-cloud-gem-name=google-cloud-dns-v1",
        "ruby-cloud-generate-metadata=false",
        "ruby-cloud-generate-transports=rest",
        "ruby-cloud-env-prefix=DNS",
        "ruby-cloud-product-url=https://cloud.google.com/dns/",
        "ruby-cloud-wrapper-gem-override=",
        "ruby-cloud-extra-dependencies=google-cloud-common=~> 1.0",
    ],
    grpc_service_config = ":dns_grpc_service_config.json",
    ruby_cloud_description = "google-cloud-dns-v1 is the official client library for the Google Cloud DNS V1 API.",
    ruby_cloud_title = "Google Cloud DNS V1",
    deps = [
        ":dns_ruby_proto",
    ],
)

ruby_gapic_assembly_pkg(
    name = "google-cloud-dns-v1-ruby",
    deps = [
        ":dns_ruby_gapic",
        ":dns_ruby_proto",
    ],
)


##############################################################################
# C#
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "csharp_gapic_assembly_pkg",
    "csharp_gapic_library",
    "csharp_grpc_library",
    "csharp_proto_library",
)

csharp_proto_library(
    name = "dns_csharp_proto",
    deps = [":dns_proto"],
)

csharp_grpc_library(
    name = "dns_csharp_grpc",
    srcs = [":dns_proto"],
    deps = [":dns_csharp_proto"],
)

csharp_gapic_library(
    name = "dns_csharp_gapic",
    srcs = [":dns_proto_with_info"],
    common_resources_config = "@gax_dotnet//:Google.Api.Gax/ResourceNames/CommonResourcesConfig.json",
    grpc_service_config = ":dns_grpc_service_config.json",
    transport = "rest",
    deps = [
        ":dns_csharp_grpc",
        ":dns_csharp_proto",
    ],
)

# Open Source Packages
csharp_gapic_assembly_pkg(
    name = "google-cloud-dns-v1-csharp",
    deps = [
        ":dns_csharp_gapic",
        ":dns_csharp_grpc",
        ":dns_csharp_proto",
    ],
)
