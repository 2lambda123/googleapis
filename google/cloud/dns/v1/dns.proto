// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the disco-to-proto3-converter. DO NOT EDIT!
// Source Discovery file: dns.v1.json
// Source file revision: 20220929
// API name: dns
// API version: v1

syntax = "proto3";

package google.cloud.dns.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

//
// File Options
//
option csharp_namespace = "Google.Cloud.Dns.V1";
option go_package = "google.golang.org/genproto/googleapis/cloud/dns/v1;dns";
option java_multiple_files = true;
option java_package = "com.google.cloud.dns.v1";
option php_namespace = "Google\\Cloud\\Dns\\V1";
option ruby_package = "Google::Cloud::Dns::V1";

//
// Messages
//
// A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence.
message Change {
  // Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    done = 3089282;

    pending = 391154071;

  }

  // Which ResourceRecordSets to add?
  repeated ResourceRecordSet additions = 93562103;

  // Which ResourceRecordSets to remove? Must match existing data exactly.
  repeated ResourceRecordSet deletions = 178296421;

  // Unique identifier for the resource; defined by the server (output only).
  optional string id = 3355;

  // If the DNS queries for the zone will be served.
  optional bool is_serving = 263238135;

  optional string kind = 3292052;

  // The time that this operation was started by the server (output only). This is in RFC3339 text format.
  optional string start_time = 37467274;

  // Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

}

// The response to a request to enumerate Changes to a ResourceRecordSets collection.
message ChangesListResponse {
  // The requested changes.
  repeated Change changes = 202072771;

  optional ResponseHeader header = 389341837;

  // Type of resource.
  optional string kind = 3292052;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a "snapshot" of collections larger than the maximum page size.
  optional string next_page_token = 79797525;

}

// A request message for Changes.Create. See the method description for details.
message CreateChangeRequest {
  // The body resource for this request
  Change change_resource = 167577533 [(google.api.field_behavior) = REQUIRED];

  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZones.Create. See the method description for details.
message CreateManagedZoneRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // The body resource for this request
  ManagedZone managed_zone_resource = 111071905 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Policies.Create. See the method description for details.
message CreatePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // The body resource for this request
  Policy policy_resource = 42272891 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourceRecordSets.Create. See the method description for details.
message CreateResourceRecordSetRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResourceRecordSet resource_record_set_resource = 54726344 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicies.Create. See the method description for details.
message CreateResponsePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResponsePolicy response_policy_resource = 366399613 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicyRules.Create. See the method description for details.
message CreateResponsePolicyRuleRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy containing the Response Policy Rule.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResponsePolicyRule response_policy_rule_resource = 223730402 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZones.Delete. See the method description for details.
message DeleteManagedZoneRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A response message for ManagedZones.Delete. See the method description for details.
message DeleteManagedZoneResponse {
}

// A request message for Policies.Delete. See the method description for details.
message DeletePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // User given friendly name of the policy addressed by this request.
  string policy = 91071794 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A response message for Policies.Delete. See the method description for details.
message DeletePolicyResponse {
}

// A request message for ResourceRecordSets.Delete. See the method description for details.
message DeleteResourceRecordSetRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Fully qualified domain name.
  string name = 3373707 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // RRSet type.
  string type = 3575610 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicies.Delete. See the method description for details.
message DeleteResponsePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy addressed by this request.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

}

// A response message for ResponsePolicies.Delete. See the method description for details.
message DeleteResponsePolicyResponse {
}

// A request message for ResponsePolicyRules.Delete. See the method description for details.
message DeleteResponsePolicyRuleRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy containing the Response Policy Rule.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy Rule addressed by this request.
  string response_policy_rule = 419312363 [(google.api.field_behavior) = REQUIRED];

}

// A response message for ResponsePolicyRules.Delete. See the method description for details.
message DeleteResponsePolicyRuleResponse {
}

// A DNSSEC key pair.
message DnsKey {
  // String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.
  enum Algorithm {
    // A value indicating that the enum field is not set.
    UNDEFINED_ALGORITHM = 0;

    ecdsap256sha256 = 13311774;

    ecdsap384sha384 = 48669270;

    rsasha1 = 407925573;

    rsasha256 = 100712551;

    rsasha512 = 100715306;

  }

  // One of "KEY_SIGNING" or "ZONE_SIGNING". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    keySigning = 315712934;

    zoneSigning = 298106809;

  }

  // String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.
  // Check the Algorithm enum for the list of possible values.
  optional string algorithm = 225490031;

  // The time that this resource was created in the control plane. This is in RFC3339 text format. Output only.
  optional string creation_time = 321720365;

  // A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function.
  optional string description = 422937596;

  // Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.
  repeated DnsKeyDigest digests = 49748783;

  // Unique identifier for the resource; defined by the server (output only).
  optional string id = 3355;

  // Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
  optional bool is_active = 114830267;

  // Length of the key in bits. Specified at creation time, and then immutable.
  optional uint32 key_length = 312377542;

  // The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only.
  optional int32 key_tag = 258622906;

  optional string kind = 3292052;

  // Base64 encoded public half of this key. Output only.
  optional string public_key = 294200201;

  // One of "KEY_SIGNING" or "ZONE_SIGNING". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

//
message DnsKeyDigest {
  // Specifies the algorithm used to calculate this digest.
  enum Type {
    // A value indicating that the enum field is not set.
    UNDEFINED_TYPE = 0;

    sha1 = 3528965;

    sha256 = 170112551;

    sha384 = 170113603;

  }

  // The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
  optional string digest = 278699460;

  // Specifies the algorithm used to calculate this digest.
  // Check the Type enum for the list of possible values.
  optional string type = 3575610;

}

// Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.
message DnsKeySpec {
  // String mnemonic specifying the DNSSEC algorithm of this key.
  enum Algorithm {
    // A value indicating that the enum field is not set.
    UNDEFINED_ALGORITHM = 0;

    ecdsap256sha256 = 13311774;

    ecdsap384sha384 = 48669270;

    rsasha1 = 407925573;

    rsasha256 = 100712551;

    rsasha512 = 100715306;

  }

  // Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.
  enum KeyType {
    // A value indicating that the enum field is not set.
    UNDEFINED_KEY_TYPE = 0;

    keySigning = 315712934;

    zoneSigning = 298106809;

  }

  // String mnemonic specifying the DNSSEC algorithm of this key.
  // Check the Algorithm enum for the list of possible values.
  optional string algorithm = 225490031;

  // Length of the keys in bits.
  optional uint32 key_length = 312377542;

  // Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.
  // Check the KeyType enum for the list of possible values.
  optional string key_type = 501140762;

  optional string kind = 3292052;

}

// The response to a request to enumerate DnsKeys in a ManagedZone.
message DnsKeysListResponse {
  // The requested resources.
  repeated DnsKey dns_keys = 411906890;

  optional ResponseHeader header = 389341837;

  // Type of resource.
  optional string kind = 3292052;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a "snapshot" of collections larger than the maximum page size.
  optional string next_page_token = 79797525;

}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
message Expr {
  // Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
  optional string description = 422937596;

  // Textual representation of an expression in Common Expression Language syntax.
  optional string expression = 352031384;

  // Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
  optional string location = 290430901;

  // Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
  optional string title = 110371416;

}

// A request message for Changes.Get. See the method description for details.
message GetChangeRequest {
  // The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.
  string change_id = 381517834 [(google.api.field_behavior) = REQUIRED];

  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for DnsKeys.Get. See the method description for details.
message GetDnsKeyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.
  optional string digest_type = 228893909;

  // The identifier of the requested DnsKey.
  string dns_key_id = 168643281 [(google.api.field_behavior) = REQUIRED];

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZones.GetIamPolicy. See the method description for details.
message GetIamPolicyManagedZoneRequest {
  // The body resource for this request
  GoogleIamV1GetIamPolicyRequest google_iam_v1_get_iam_policy_request_resource = 99326724 [(google.api.field_behavior) = REQUIRED];

  // REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZoneOperations.Get. See the method description for details.
message GetManagedZoneOperationRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the operation addressed by this request (ID of the operation).
  string operation = 52090215 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZones.Get. See the method description for details.
message GetManagedZoneRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Policies.Get. See the method description for details.
message GetPolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // User given friendly name of the policy addressed by this request.
  string policy = 91071794 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Projects.Get. See the method description for details.
message GetProjectRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourceRecordSets.Get. See the method description for details.
message GetResourceRecordSetRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Fully qualified domain name.
  string name = 3373707 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // RRSet type.
  string type = 3575610 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicies.Get. See the method description for details.
message GetResponsePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy addressed by this request.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicyRules.Get. See the method description for details.
message GetResponsePolicyRuleRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy containing the Response Policy Rule.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy Rule addressed by this request.
  string response_policy_rule = 419312363 [(google.api.field_behavior) = REQUIRED];

}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
message GoogleIamV1AuditConfig {
  // The configuration for logging of each type of permission.
  repeated GoogleIamV1AuditLogConfig audit_log_configs = 488420626;

  // Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
  optional string service = 373540533;

}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
message GoogleIamV1AuditLogConfig {
  // The log type that this config enables.
  enum LogType {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOG_TYPE = 0;

    // Admin reads. Example: CloudIAM getIamPolicy
    ADMIN_READ = 128951462;

    // Data reads. Example: CloudSQL Users list
    DATA_READ = 305224971;

    // Data writes. Example: CloudSQL Users create
    DATA_WRITE = 340181738;

    // Default case. Should never be this.
    LOG_TYPE_UNSPECIFIED = 154527053;

  }

  // Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
  repeated string exempted_members = 232615576;

  // The log type that this config enables.
  // Check the LogType enum for the list of possible values.
  optional string log_type = 403115861;

}

// Associates `members`, or principals, with a `role`.
message GoogleIamV1Binding {
  // The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional Expr condition = 212430107;

  // Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
  repeated string members = 412010777;

  // Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
  optional string role = 3506294;

}

// Request message for `GetIamPolicy` method.
message GoogleIamV1GetIamPolicyRequest {
  // OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.
  optional GoogleIamV1GetPolicyOptions options = 361137822;

}

// Encapsulates settings provided to GetIamPolicy.
message GoogleIamV1GetPolicyOptions {
  // Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional int32 requested_policy_version = 485974972;

}

// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
message GoogleIamV1Policy {
  // Specifies cloud audit logging configuration for this policy.
  repeated GoogleIamV1AuditConfig audit_configs = 328080653;

  // Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
  repeated GoogleIamV1Binding bindings = 403251854;

  // `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
  optional string etag = 3123477;

  // Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional int32 version = 351608024;

}

// Request message for `SetIamPolicy` method.
message GoogleIamV1SetIamPolicyRequest {
  // REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.
  optional GoogleIamV1Policy policy = 91071794;

  // OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
  optional string update_mask = 500079778;

}

// Request message for `TestIamPermissions` method.
message GoogleIamV1TestIamPermissionsRequest {
  // The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
  repeated string permissions = 59962500;

}

// Response message for `TestIamPermissions` method.
message GoogleIamV1TestIamPermissionsResponse {
  // A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
  repeated string permissions = 59962500;

}

// A request message for Changes.List. See the method description for details.
message ListChangesRequest {
  // Sorting criterion. The only supported value is change sequence.
  enum SortBy {
    // A value indicating that the enum field is not set.
    UNDEFINED_SORT_BY = 0;

    changeSequence = 527122321;

  }

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Sorting criterion. The only supported value is change sequence.
  // Check the SortBy enum for the list of possible values.
  optional string sort_by = 122891928;

  // Sorting order direction: 'ascending' or 'descending'.
  optional string sort_order = 162574701;

}

// A request message for DnsKeys.List. See the method description for details.
message ListDnsKeysRequest {
  // An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.
  optional string digest_type = 228893909;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZoneOperations.List. See the method description for details.
message ListManagedZoneOperationsRequest {
  // Sorting criterion. The only supported values are START_TIME and ID.
  enum SortBy {
    // A value indicating that the enum field is not set.
    UNDEFINED_SORT_BY = 0;

    id = 3355;

    startTime = 18188879;

  }

  // Identifies the managed zone addressed by this request.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Sorting criterion. The only supported values are START_TIME and ID.
  // Check the SortBy enum for the list of possible values.
  optional string sort_by = 122891928;

}

// A request message for ManagedZones.List. See the method description for details.
message ListManagedZonesRequest {
  // Restricts the list to return only zones with this domain name.
  optional string dns_name = 411992033;

  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Policies.List. See the method description for details.
message ListPoliciesRequest {
  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourceRecordSets.List. See the method description for details.
message ListResourceRecordSetsRequest {
  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Restricts the list to return only records with this fully qualified domain name.
  optional string name = 3373707;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // Restricts the list to return only records of this type. If present, the "name" parameter must also be present.
  optional string type = 3575610;

}

// A request message for ResponsePolicies.List. See the method description for details.
message ListResponsePoliciesRequest {
  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicyRules.List. See the method description for details.
message ListResponsePolicyRulesRequest {
  // Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
  optional int32 max_results = 54715419;

  // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
  optional string page_token = 19994697;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy to list.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

}

// A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.
message ManagedZone {
  // The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
  enum Visibility {
    // A value indicating that the enum field is not set.
    UNDEFINED_VISIBILITY = 0;

    private = 222373251;

    public = 96318057;

  }

  optional ManagedZoneCloudLoggingConfig cloud_logging_config = 510638956;

  // The time that this resource was created on the server. This is in RFC3339 text format. Output only.
  optional string creation_time = 321720365;

  // A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
  optional string description = 422937596;

  // The DNS name of this managed zone, for instance "example.com.".
  optional string dns_name = 411992033;

  // DNSSEC configuration.
  optional ManagedZoneDnsSecConfig dnssec_config = 352410841;

  // The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.
  optional ManagedZoneForwardingConfig forwarding_config = 228738756;

  // Unique identifier for the resource; defined by the server (output only)
  optional uint64 id = 3355;

  optional string kind = 3292052;

  // User labels.
  map<string, string> labels = 500195327;

  // User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
  optional string name = 3373707;

  // Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.
  optional string name_server_set = 473900954;

  // Delegate your managed_zone to these virtual name servers; defined by the server (output only)
  repeated string name_servers = 504700892;

  // The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.
  optional ManagedZonePeeringConfig peering_config = 91702561;

  // For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.
  optional ManagedZonePrivateVisibilityConfig private_visibility_config = 366852435;

  // The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config.
  optional ManagedZoneReverseLookupConfig reverse_lookup_config = 62622474;

  // This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones.
  optional ManagedZoneServiceDirectoryConfig service_directory_config = 190904734;

  // The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
  // Check the Visibility enum for the list of possible values.
  optional string visibility = 330720018;

}

// Cloud Logging configurations for publicly visible zones.
message ManagedZoneCloudLoggingConfig {
  // If set, enable query logging for this ManagedZone. False by default, making logging opt-in.
  optional bool enable_logging = 295396515;

  optional string kind = 3292052;

}

//
message ManagedZoneDnsSecConfig {
  // Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
  enum NonExistence {
    // A value indicating that the enum field is not set.
    UNDEFINED_NON_EXISTENCE = 0;

    nsec = 3390755;

    nsec3 = 105113456;

  }

  // Specifies whether DNSSEC is enabled, and what mode it is in.
  enum State {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATE = 0;

    // DNSSEC is disabled; the zone is not signed.
    off = 109935;

    // DNSSEC is enabled; the zone is signed and fully managed.
    on = 3551;

    // DNSSEC is enabled, but in a "transfer" mode.
    transfer = 207140843;

  }

  // Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
  repeated DnsKeySpec default_key_specs = 16462266;

  optional string kind = 3292052;

  // Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
  // Check the NonExistence enum for the list of possible values.
  optional string non_existence = 27521872;

  // Specifies whether DNSSEC is enabled, and what mode it is in.
  // Check the State enum for the list of possible values.
  optional string state = 109757585;

}

//
message ManagedZoneForwardingConfig {
  optional string kind = 3292052;

  // List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given.
  repeated ManagedZoneForwardingConfigNameServerTarget target_name_servers = 110422986;

}

//
message ManagedZoneForwardingConfigNameServerTarget {
  // Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.
  enum ForwardingPath {
    // A value indicating that the enum field is not set.
    UNDEFINED_FORWARDING_PATH = 0;

    // Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet
    default = 471062081;

    // Cloud DNS always forwards to this target through the VPC.
    private = 222373251;

  }

  // Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.
  // Check the ForwardingPath enum for the list of possible values.
  optional string forwarding_path = 269885479;

  // IPv4 address of a target name server.
  optional string ipv4_address = 198376346;

  optional string kind = 3292052;

}

//
message ManagedZoneOperationsListResponse {
  optional ResponseHeader header = 389341837;

  // Type of resource.
  optional string kind = 3292052;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
  optional string next_page_token = 79797525;

  // The operation resources.
  repeated Operation operations = 4184044;

}

//
message ManagedZonePeeringConfig {
  optional string kind = 3292052;

  // The network with which to peer.
  optional ManagedZonePeeringConfigTargetNetwork target_network = 397496704;

}

//
message ManagedZonePeeringConfigTargetNetwork {
  // The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.
  optional string deactivate_time = 390685624;

  optional string kind = 3292052;

  // The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
  optional string network_url = 207194078;

}

//
message ManagedZonePrivateVisibilityConfig {
  // The list of Google Kubernetes Engine clusters that can see this zone.
  repeated ManagedZonePrivateVisibilityConfigGKECluster gke_clusters = 97927223;

  optional string kind = 3292052;

  // The list of VPC networks that can see this zone.
  repeated ManagedZonePrivateVisibilityConfigNetwork networks = 239725573;

}

//
message ManagedZonePrivateVisibilityConfigGKECluster {
  // The resource name of the cluster to bind this ManagedZone to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get
  optional string gke_cluster_name = 316076334;

  optional string kind = 3292052;

}

//
message ManagedZonePrivateVisibilityConfigNetwork {
  optional string kind = 3292052;

  // The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
  optional string network_url = 207194078;

}

//
message ManagedZoneReverseLookupConfig {
  optional string kind = 3292052;

}

// Contains information about Service Directory-backed zones.
message ManagedZoneServiceDirectoryConfig {
  optional string kind = 3292052;

  // Contains information about the namespace associated with the zone.
  optional ManagedZoneServiceDirectoryConfigNamespace namespace = 178476379;

}

//
message ManagedZoneServiceDirectoryConfigNamespace {
  // The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.
  optional string deletion_time = 17914014;

  optional string kind = 3292052;

  // The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}
  optional string namespace_url = 337650827;

}

//
message ManagedZonesListResponse {
  optional ResponseHeader header = 389341837;

  // Type of resource.
  optional string kind = 3292052;

  // The managed zone resources.
  repeated ManagedZone managed_zones = 411586983;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
  optional string next_page_token = 79797525;

}

// An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.
message Operation {
  // Status of the operation. Can be one of the following: "PENDING" or "DONE" (output only). A status of "DONE" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
  enum Status {
    // A value indicating that the enum field is not set.
    UNDEFINED_STATUS = 0;

    done = 3089282;

    pending = 391154071;

  }

  // Only populated if the operation targeted a DnsKey (output only).
  optional OperationDnsKeyContext dns_key_context = 486152633;

  // Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)
  optional string id = 3355;

  optional string kind = 3292052;

  // The time that this operation was started by the server. This is in RFC3339 text format (output only).
  optional string start_time = 37467274;

  // Status of the operation. Can be one of the following: "PENDING" or "DONE" (output only). A status of "DONE" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
  // Check the Status enum for the list of possible values.
  optional string status = 181260274;

  // Type of the operation. Operations include insert, update, and delete (output only).
  optional string type = 3575610;

  // User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)
  optional string user = 3599307;

  // Only populated if the operation targeted a ManagedZone (output only).
  optional OperationManagedZoneContext zone_context = 363303964;

}

//
message OperationDnsKeyContext {
  // The post-operation DnsKey resource.
  optional DnsKey new_value = 286058002;

  // The pre-operation DnsKey resource.
  optional DnsKey old_value = 258156889;

}

//
message OperationManagedZoneContext {
  // The post-operation ManagedZone resource.
  optional ManagedZone new_value = 286058002;

  // The pre-operation ManagedZone resource.
  optional ManagedZone old_value = 258156889;

}

// A request message for ManagedZones.Patch. See the method description for details.
message PatchManagedZoneRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ManagedZone managed_zone_resource = 111071905 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Policies.Patch. See the method description for details.
message PatchPolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // User given friendly name of the policy addressed by this request.
  string policy = 91071794 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Policy policy_resource = 42272891 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResourceRecordSets.Patch. See the method description for details.
message PatchResourceRecordSetRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // Fully qualified domain name.
  string name = 3373707 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResourceRecordSet resource_record_set_resource = 54726344 [(google.api.field_behavior) = REQUIRED];

  // RRSet type.
  string type = 3575610 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicies.Patch. See the method description for details.
message PatchResponsePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Respones Policy addressed by this request.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResponsePolicy response_policy_resource = 366399613 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicyRules.Patch. See the method description for details.
message PatchResponsePolicyRuleRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy containing the Response Policy Rule.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy Rule addressed by this request.
  string response_policy_rule = 419312363 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResponsePolicyRule response_policy_rule_resource = 223730402 [(google.api.field_behavior) = REQUIRED];

}

//
message PoliciesListResponse {
  optional ResponseHeader header = 389341837;

  // Type of resource.
  optional string kind = 3292052;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
  optional string next_page_token = 79797525;

  // The policy resources.
  repeated Policy policies = 10023248;

}

//
message PoliciesPatchResponse {
  optional ResponseHeader header = 389341837;

  optional Policy policy = 91071794;

}

//
message PoliciesUpdateResponse {
  optional ResponseHeader header = 389341837;

  optional Policy policy = 91071794;

}

// A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.
message Policy {
  // Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.
  optional PolicyAlternativeNameServerConfig alternative_name_server_config = 343624412;

  // A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.
  optional string description = 422937596;

  // Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.
  optional bool enable_inbound_forwarding = 121768895;

  // Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.
  optional bool enable_logging = 295396515;

  // Unique identifier for the resource; defined by the server (output only).
  optional uint64 id = 3355;

  optional string kind = 3292052;

  // User-assigned name for this policy.
  optional string name = 3373707;

  // List of network names specifying networks to which this policy is applied.
  repeated PolicyNetwork networks = 239725573;

}

//
message PolicyAlternativeNameServerConfig {
  optional string kind = 3292052;

  // Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.
  repeated PolicyAlternativeNameServerConfigTargetNameServer target_name_servers = 110422986;

}

//
message PolicyAlternativeNameServerConfigTargetNameServer {
  // Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.
  enum ForwardingPath {
    // A value indicating that the enum field is not set.
    UNDEFINED_FORWARDING_PATH = 0;

    // Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet
    default = 471062081;

    // Cloud DNS always forwards to this target through the VPC.
    private = 222373251;

  }

  // Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.
  // Check the ForwardingPath enum for the list of possible values.
  optional string forwarding_path = 269885479;

  // IPv4 address to forward to.
  optional string ipv4_address = 198376346;

  optional string kind = 3292052;

}

//
message PolicyNetwork {
  optional string kind = 3292052;

  // The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
  optional string network_url = 207194078;

}

// A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7.
message Project {
  // User assigned unique identifier for the resource (output only).
  optional string id = 3355;

  optional string kind = 3292052;

  // Unique numeric identifier for the resource; defined by the server (output only).
  optional uint64 number = 39377737;

  // Quotas assigned to this project (output only).
  optional Quota quota = 107953784;

}

// Limits associated with a Project.
message Quota {
  // Maximum allowed number of DnsKeys per ManagedZone.
  optional int32 dns_keys_per_managed_zone = 275240067;

  // Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.
  optional int32 gke_clusters_per_managed_zone = 266772278;

  // Maximum allowed number of GKE clusters per policy.
  optional int32 gke_clusters_per_policy = 303006620;

  // Maximum allowed number of GKE clusters per response policy.
  optional int32 gke_clusters_per_response_policy = 368389062;

  // Maximum allowed number of items per routing policy.
  optional int32 items_per_routing_policy = 512326924;

  optional string kind = 3292052;

  // Maximum allowed number of managed zones in the project.
  optional int32 managed_zones = 411586983;

  // Maximum allowed number of managed zones which can be attached to a GKE cluster.
  optional int32 managed_zones_per_gke_cluster = 465337602;

  // Maximum allowed number of managed zones which can be attached to a network.
  optional int32 managed_zones_per_network = 435073652;

  // Maximum allowed number of networks to which a privately scoped zone can be attached.
  optional int32 networks_per_managed_zone = 457328936;

  // Maximum allowed number of networks per policy.
  optional int32 networks_per_policy = 237374222;

  // Maximum allowed number of networks per response policy.
  optional int32 networks_per_response_policy = 368764052;

  // Maximum allowed number of consumer peering zones per target network owned by this producer project
  optional int32 peering_zones_per_target_network = 293265913;

  // Maximum allowed number of policies per project.
  optional int32 policies = 10023248;

  // Maximum allowed number of ResourceRecords per ResourceRecordSet.
  optional int32 resource_records_per_rrset = 118342866;

  // Maximum allowed number of response policies per project.
  optional int32 response_policies = 463685518;

  // Maximum allowed number of rules per response policy.
  optional int32 response_policy_rules_per_response_policy = 445633527;

  // Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.
  optional int32 rrset_additions_per_change = 156939095;

  // Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.
  optional int32 rrset_deletions_per_change = 265433385;

  // Maximum allowed number of ResourceRecordSets per zone in the project.
  optional int32 rrsets_per_managed_zone = 386752540;

  // Maximum allowed number of target name servers per managed forwarding zone.
  optional int32 target_name_servers_per_managed_zone = 347614211;

  // Maximum allowed number of alternative target name servers per policy.
  optional int32 target_name_servers_per_policy = 50982441;

  // Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
  optional int32 total_rrdata_size_per_change = 173745942;

  // DNSSEC algorithm and key length types that can be used for DnsKeys.
  repeated DnsKeySpec whitelisted_key_specs = 452499551;

}

// A RRSetRoutingPolicy represents ResourceRecordSet data that is returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection.
message RRSetRoutingPolicy {
  optional RRSetRoutingPolicyGeoPolicy geo = 102225;

  optional string kind = 3292052;

  optional RRSetRoutingPolicyPrimaryBackupPolicy primary_backup = 311033503;

  optional RRSetRoutingPolicyWrrPolicy wrr = 118007;

}

// Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.
message RRSetRoutingPolicyGeoPolicy {
  // Without fencing, if health check fails for all configured items in the current geo bucket, we'll failover to the next nearest geo bucket. With fencing, if health check is enabled, as long as some targets in the current geo bucket are healthy, we'll return only the healthy targets. However, if they're all unhealthy, we won't failover to the next nearest bucket, we'll simply return all the items in the current bucket even though they're unhealthy.
  optional bool enable_fencing = 59137522;

  // The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead.
  repeated RRSetRoutingPolicyGeoPolicyGeoPolicyItem items = 100526016;

  optional string kind = 3292052;

}

// ResourceRecordSet data for one geo location.
message RRSetRoutingPolicyGeoPolicyGeoPolicyItem {
  // For A and AAAA types only. Endpoints to return in the query result only if they are healthy. These can be specified along with rrdata within this item.
  optional RRSetRoutingPolicyHealthCheckTargets health_checked_targets = 10600583;

  optional string kind = 3292052;

  // The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. "us-east1", "southamerica-east1", "asia-east1", etc.
  optional string location = 290430901;

  repeated string rrdatas = 381542345;

  // DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .
  repeated string signature_rrdatas = 157476674;

}

// HealthCheckTargets describes endpoints to health-check when responding to Routing Policy queries. Only the healthy endpoints will be included in the response.
message RRSetRoutingPolicyHealthCheckTargets {
  repeated RRSetRoutingPolicyLoadBalancerTarget internal_load_balancers = 495469510;

}

//
message RRSetRoutingPolicyLoadBalancerTarget {
  //
  enum IpProtocol {
    // A value indicating that the enum field is not set.
    UNDEFINED_IP_PROTOCOL = 0;

    tcp = 114657;

    udp = 115649;

    undefined = 35610960;

  }

  //
  enum LoadBalancerType {
    // A value indicating that the enum field is not set.
    UNDEFINED_LOAD_BALANCER_TYPE = 0;

    none = 3387192;

    regionalL4ilb = 231729784;

  }

  // The frontend IP address of the
  optional string ip_address = 406272220;

  // 
  // Check the IpProtocol enum for the list of possible values.
  optional string ip_protocol = 475958960;

  optional string kind = 3292052;

  // 
  // Check the LoadBalancerType enum for the list of possible values.
  optional string load_balancer_type = 193832234;

  // The fully qualified url of the network on which the ILB is
  optional string network_url = 207194078;

  // Load Balancer to health check. The configured port of the Load Balancer.
  optional string port = 3446913;

  // present. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network} The project ID in which the ILB exists.
  optional string project = 227560217;

  // The region for regional ILBs.
  optional string region = 138946292;

}

// Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy.
message RRSetRoutingPolicyPrimaryBackupPolicy {
  // Backup targets provide a regional failover policy for the otherwise global primary targets. If serving state is set to BACKUP, this policy essentially becomes a geo routing policy.
  optional RRSetRoutingPolicyGeoPolicy backup_geo_targets = 209278743;

  optional string kind = 3292052;

  optional RRSetRoutingPolicyHealthCheckTargets primary_targets = 397890501;

  // When serving state is PRIMARY, this field provides the option of sending a small percentage of the traffic to the backup targets.
  optional double trickle_traffic = 270831818;

}

// Configures a RRSetRoutingPolicy that routes in a weighted round robin fashion.
message RRSetRoutingPolicyWrrPolicy {
  repeated RRSetRoutingPolicyWrrPolicyWrrPolicyItem items = 100526016;

  optional string kind = 3292052;

}

// A routing block which contains the routing information for one WRR item.
message RRSetRoutingPolicyWrrPolicyWrrPolicyItem {
  // endpoints that need to be health checked before making the routing decision. The unhealthy endpoints will be omitted from the result. If all endpoints within a buckete are unhealthy, we'll choose a different bucket (sampled w.r.t. its weight) for responding. Note that if DNSSEC is enabled for this zone, only one of rrdata or health_checked_targets can be set.
  optional RRSetRoutingPolicyHealthCheckTargets health_checked_targets = 10600583;

  optional string kind = 3292052;

  repeated string rrdatas = 381542345;

  // DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .
  repeated string signature_rrdatas = 157476674;

  // The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be non-negative.
  optional double weight = 282149496;

}

// A unit of data that is returned by the DNS servers.
message ResourceRecordSet {
  optional string kind = 3292052;

  // For example, www.example.com.
  optional string name = 3373707;

  // Configures dynamic query responses based on geo location of querying user or a weighted round robin based routing policy. A ResourceRecordSet should only have either rrdata (static) or routing_policy (dynamic). An error is returned otherwise.
  optional RRSetRoutingPolicy routing_policy = 358807243;

  // As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
  repeated string rrdatas = 381542345;

  // As defined in RFC 4034 (section 3.2).
  repeated string signature_rrdatas = 157476674;

  // Number of seconds that this ResourceRecordSet can be cached by resolvers.
  optional int32 ttl = 115180;

  // The identifier of a supported record type. See the list of Supported DNS record types.
  optional string type = 3575610;

}

//
message ResourceRecordSetsDeleteResponse {
}

//
message ResourceRecordSetsListResponse {
  optional ResponseHeader header = 389341837;

  // Type of resource.
  optional string kind = 3292052;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
  optional string next_page_token = 79797525;

  // The resource record set resources.
  repeated ResourceRecordSet rrsets = 151305873;

}

// Elements common to every response.
message ResponseHeader {
  // For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).
  optional string operation_id = 262754035;

}

//
message ResponsePoliciesListResponse {
  optional ResponseHeader header = 389341837;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
  optional string next_page_token = 79797525;

  // The Response Policy resources.
  repeated ResponsePolicy response_policies = 463685518;

}

//
message ResponsePoliciesPatchResponse {
  optional ResponseHeader header = 389341837;

  optional ResponsePolicy response_policy = 116683504;

}

//
message ResponsePoliciesUpdateResponse {
  optional ResponseHeader header = 389341837;

  optional ResponsePolicy response_policy = 116683504;

}

// A Response Policy is a collection of selectors that apply to queries made against one or more Virtual Private Cloud networks.
message ResponsePolicy {
  // User-provided description for this Response Policy.
  optional string description = 422937596;

  // The list of Google Kubernetes Engine clusters to which this response policy is applied.
  repeated ResponsePolicyGKECluster gke_clusters = 97927223;

  // Unique identifier for the resource; defined by the server (output only).
  optional int64 id = 3355;

  optional string kind = 3292052;

  // User labels.
  map<string, string> labels = 500195327;

  // List of network names specifying networks to which this policy is applied.
  repeated ResponsePolicyNetwork networks = 239725573;

  // User assigned name for this Response Policy.
  optional string response_policy_name = 419174010;

}

//
message ResponsePolicyGKECluster {
  // The resource name of the cluster to bind this response policy to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get
  optional string gke_cluster_name = 316076334;

  optional string kind = 3292052;

}

//
message ResponsePolicyNetwork {
  optional string kind = 3292052;

  // The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
  optional string network_url = 207194078;

}

// A Response Policy Rule is a selector that applies its behavior to queries that match the selector. Selectors are DNS names, which may be wildcards or exact matches. Each DNS query subject to a Response Policy matches at most one ResponsePolicyRule, as identified by the dns_name field with the longest matching suffix.
message ResponsePolicyRule {
  // Answer this query with a behavior rather than DNS data.
  enum Behavior {
    // A value indicating that the enum field is not set.
    UNDEFINED_BEHAVIOR = 0;

    behaviorUnspecified = 261175685;

    // Skip a less-specific ResponsePolicyRule and continue normal query logic. This can be used with a less-specific wildcard selector to exempt a subset of the wildcard ResponsePolicyRule from the ResponsePolicy behavior and query the public Internet instead. For instance, if these rules exist: *.example.com -> LocalData 1.2.3.4 foo.example.com -> Behavior 'bypassResponsePolicy' Then a query for 'foo.example.com' skips the wildcard. This additionally functions to facilitate the allowlist feature. RPZs can be applied to multiple levels in the (eventually org, folder, project, network) hierarchy. If a rule is applied at a higher level of the hierarchy, adding a passthru rule at a lower level will supersede that, and a query from an affected vm to that domain will be exempt from the RPZ and proceed to normal resolution behavior.
    bypassResponsePolicy = 141177819;

  }

  // Answer this query with a behavior rather than DNS data.
  // Check the Behavior enum for the list of possible values.
  optional string behavior = 437170770;

  // The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
  optional string dns_name = 411992033;

  optional string kind = 3292052;

  // Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
  optional ResponsePolicyRuleLocalData local_data = 229487614;

  // An identifier for this rule. Must be unique with the ResponsePolicy.
  optional string rule_name = 55286254;

}

//
message ResponsePolicyRuleLocalData {
  // All resource record sets for this selector, one per resource record type. The name must match the dns_name.
  repeated ResourceRecordSet local_datas = 134794293;

}

//
message ResponsePolicyRulesListResponse {
  optional ResponseHeader header = 389341837;

  // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
  optional string next_page_token = 79797525;

  // The Response Policy Rule resources.
  repeated ResponsePolicyRule response_policy_rules = 113781480;

}

//
message ResponsePolicyRulesPatchResponse {
  optional ResponseHeader header = 389341837;

  optional ResponsePolicyRule response_policy_rule = 419312363;

}

//
message ResponsePolicyRulesUpdateResponse {
  optional ResponseHeader header = 389341837;

  optional ResponsePolicyRule response_policy_rule = 419312363;

}

// A request message for ManagedZones.SetIamPolicy. See the method description for details.
message SetIamPolicyManagedZoneRequest {
  // The body resource for this request
  GoogleIamV1SetIamPolicyRequest google_iam_v1_set_iam_policy_request_resource = 13958672 [(google.api.field_behavior) = REQUIRED];

  // REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZones.TestIamPermissions. See the method description for details.
message TestIamPermissionsManagedZoneRequest {
  // The body resource for this request
  GoogleIamV1TestIamPermissionsRequest google_iam_v1_test_iam_permissions_request_resource = 451418620 [(google.api.field_behavior) = REQUIRED];

  // REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
  string resource = 195806222 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ManagedZones.Update. See the method description for details.
message UpdateManagedZoneRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
  string managed_zone = 290371660 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ManagedZone managed_zone_resource = 111071905 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for Policies.Update. See the method description for details.
message UpdatePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // User given friendly name of the policy addressed by this request.
  string policy = 91071794 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  Policy policy_resource = 42272891 [(google.api.field_behavior) = REQUIRED];

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicies.Update. See the method description for details.
message UpdateResponsePolicyRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy addressed by this request.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResponsePolicy response_policy_resource = 366399613 [(google.api.field_behavior) = REQUIRED];

}

// A request message for ResponsePolicyRules.Update. See the method description for details.
message UpdateResponsePolicyRuleRequest {
  // For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
  optional string client_operation_id = 297240295;

  // Identifies the project addressed by this request.
  string project = 227560217 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy containing the Response Policy Rule.
  string response_policy = 116683504 [(google.api.field_behavior) = REQUIRED];

  // User assigned name of the Response Policy Rule addressed by this request.
  string response_policy_rule = 419312363 [(google.api.field_behavior) = REQUIRED];

  // The body resource for this request
  ResponsePolicyRule response_policy_rule_resource = 223730402 [(google.api.field_behavior) = REQUIRED];

}

//
// Services
//
// The Changes API.
service Changes {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Atomically updates the ResourceRecordSet collection.
  rpc Create(CreateChangeRequest) returns (Change) {
    option (google.api.http) = {
      body: "change_resource"
      post: "/dns/v1/projects/{project}/managedZones/{managed_zone}/changes"
    };
    option (google.api.method_signature) = "project,managed_zone,change_resource";
  }

  // Fetches the representation of an existing Change.
  rpc Get(GetChangeRequest) returns (Change) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/changes/{change_id}"
    };
    option (google.api.method_signature) = "project,managed_zone,change_id";
  }

  // Enumerates Changes to a ResourceRecordSet collection.
  rpc List(ListChangesRequest) returns (ChangesListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/changes"
    };
    option (google.api.method_signature) = "project,managed_zone";
  }

}

// The DnsKeys API.
service DnsKeys {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/ndev.clouddns.readonly,"
    "https://www.googleapis.com/auth/cloud-platform.read-only,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Fetches the representation of an existing DnsKey.
  rpc Get(GetDnsKeyRequest) returns (DnsKey) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/dnsKeys/{dns_key_id}"
    };
    option (google.api.method_signature) = "project,managed_zone,dns_key_id";
  }

  // Enumerates DnsKeys to a ResourceRecordSet collection.
  rpc List(ListDnsKeysRequest) returns (DnsKeysListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/dnsKeys"
    };
    option (google.api.method_signature) = "project,managed_zone";
  }

}

// The ManagedZoneOperations API.
service ManagedZoneOperations {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/ndev.clouddns.readonly,"
    "https://www.googleapis.com/auth/cloud-platform.read-only,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Fetches the representation of an existing Operation.
  rpc Get(GetManagedZoneOperationRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/operations/{operation}"
    };
    option (google.api.method_signature) = "project,managed_zone,operation";
  }

  // Enumerates Operations for the given ManagedZone.
  rpc List(ListManagedZoneOperationsRequest) returns (ManagedZoneOperationsListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/operations"
    };
    option (google.api.method_signature) = "project,managed_zone";
  }

}

// The ManagedZones API.
service ManagedZones {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Creates a new ManagedZone.
  rpc Create(CreateManagedZoneRequest) returns (ManagedZone) {
    option (google.api.http) = {
      body: "managed_zone_resource"
      post: "/dns/v1/projects/{project}/managedZones"
    };
    option (google.api.method_signature) = "project,managed_zone_resource";
  }

  // Deletes a previously created ManagedZone.
  rpc Delete(DeleteManagedZoneRequest) returns (DeleteManagedZoneResponse) {
    option (google.api.http) = {
      delete: "/dns/v1/projects/{project}/managedZones/{managed_zone}"
    };
    option (google.api.method_signature) = "project,managed_zone";
  }

  // Fetches the representation of an existing ManagedZone.
  rpc Get(GetManagedZoneRequest) returns (ManagedZone) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}"
    };
    option (google.api.method_signature) = "project,managed_zone";
  }

  // Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
  rpc GetIamPolicy(GetIamPolicyManagedZoneRequest) returns (GoogleIamV1Policy) {
    option (google.api.http) = {
      body: "google_iam_v1_get_iam_policy_request_resource"
      post: "/dns/v1/projects/{projectsId}/managedZones/{managedZonesId}:getIamPolicy"
    };
    option (google.api.method_signature) = "resource,google_iam_v1_get_iam_policy_request_resource";
  }

  // Enumerates ManagedZones that have been created but not yet deleted.
  rpc List(ListManagedZonesRequest) returns (ManagedZonesListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones"
    };
    option (google.api.method_signature) = "project";
  }

  // Applies a partial update to an existing ManagedZone.
  rpc Patch(PatchManagedZoneRequest) returns (Operation) {
    option (google.api.http) = {
      body: "managed_zone_resource"
      patch: "/dns/v1/projects/{project}/managedZones/{managed_zone}"
    };
    option (google.api.method_signature) = "project,managed_zone,managed_zone_resource";
  }

  // Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
  rpc SetIamPolicy(SetIamPolicyManagedZoneRequest) returns (GoogleIamV1Policy) {
    option (google.api.http) = {
      body: "google_iam_v1_set_iam_policy_request_resource"
      post: "/dns/v1/projects/{projectsId}/managedZones/{managedZonesId}:setIamPolicy"
    };
    option (google.api.method_signature) = "resource,google_iam_v1_set_iam_policy_request_resource";
  }

  // Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
  rpc TestIamPermissions(TestIamPermissionsManagedZoneRequest) returns (GoogleIamV1TestIamPermissionsResponse) {
    option (google.api.http) = {
      body: "google_iam_v1_test_iam_permissions_request_resource"
      post: "/dns/v1/projects/{projectsId}/managedZones/{managedZonesId}:testIamPermissions"
    };
    option (google.api.method_signature) = "resource,google_iam_v1_test_iam_permissions_request_resource";
  }

  // Updates an existing ManagedZone.
  rpc Update(UpdateManagedZoneRequest) returns (Operation) {
    option (google.api.http) = {
      body: "managed_zone_resource"
      put: "/dns/v1/projects/{project}/managedZones/{managed_zone}"
    };
    option (google.api.method_signature) = "project,managed_zone,managed_zone_resource";
  }

}

// The Policies API.
service Policies {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Creates a new Policy.
  rpc Create(CreatePolicyRequest) returns (Policy) {
    option (google.api.http) = {
      body: "policy_resource"
      post: "/dns/v1/projects/{project}/policies"
    };
    option (google.api.method_signature) = "project,policy_resource";
  }

  // Deletes a previously created Policy. Fails if the policy is still being referenced by a network.
  rpc Delete(DeletePolicyRequest) returns (DeletePolicyResponse) {
    option (google.api.http) = {
      delete: "/dns/v1/projects/{project}/policies/{policy}"
    };
    option (google.api.method_signature) = "project,policy";
  }

  // Fetches the representation of an existing Policy.
  rpc Get(GetPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/policies/{policy}"
    };
    option (google.api.method_signature) = "project,policy";
  }

  // Enumerates all Policies associated with a project.
  rpc List(ListPoliciesRequest) returns (PoliciesListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/policies"
    };
    option (google.api.method_signature) = "project";
  }

  // Applies a partial update to an existing Policy.
  rpc Patch(PatchPolicyRequest) returns (PoliciesPatchResponse) {
    option (google.api.http) = {
      body: "policy_resource"
      patch: "/dns/v1/projects/{project}/policies/{policy}"
    };
    option (google.api.method_signature) = "project,policy,policy_resource";
  }

  // Updates an existing Policy.
  rpc Update(UpdatePolicyRequest) returns (PoliciesUpdateResponse) {
    option (google.api.http) = {
      body: "policy_resource"
      put: "/dns/v1/projects/{project}/policies/{policy}"
    };
    option (google.api.method_signature) = "project,policy,policy_resource";
  }

}

// The Projects API.
service Projects {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/ndev.clouddns.readonly,"
    "https://www.googleapis.com/auth/cloud-platform.read-only,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Fetches the representation of an existing Project.
  rpc Get(GetProjectRequest) returns (Project) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}"
    };
    option (google.api.method_signature) = "project";
  }

}

// The ResourceRecordSets API.
service ResourceRecordSets {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Creates a new ResourceRecordSet.
  rpc Create(CreateResourceRecordSetRequest) returns (ResourceRecordSet) {
    option (google.api.http) = {
      body: "resource_record_set_resource"
      post: "/dns/v1/projects/{project}/managedZones/{managed_zone}/rrsets"
    };
    option (google.api.method_signature) = "project,managed_zone,resource_record_set_resource";
  }

  // Deletes a previously created ResourceRecordSet.
  rpc Delete(DeleteResourceRecordSetRequest) returns (ResourceRecordSetsDeleteResponse) {
    option (google.api.http) = {
      delete: "/dns/v1/projects/{project}/managedZones/{managed_zone}/rrsets/{name}/{type}"
    };
    option (google.api.method_signature) = "project,managed_zone,name,type";
  }

  // Fetches the representation of an existing ResourceRecordSet.
  rpc Get(GetResourceRecordSetRequest) returns (ResourceRecordSet) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/rrsets/{name}/{type}"
    };
    option (google.api.method_signature) = "project,managed_zone,name,type";
  }

  // Enumerates ResourceRecordSets that you have created but not yet deleted.
  rpc List(ListResourceRecordSetsRequest) returns (ResourceRecordSetsListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/managedZones/{managed_zone}/rrsets"
    };
    option (google.api.method_signature) = "project,managed_zone";
  }

  // Applies a partial update to an existing ResourceRecordSet.
  rpc Patch(PatchResourceRecordSetRequest) returns (ResourceRecordSet) {
    option (google.api.http) = {
      body: "resource_record_set_resource"
      patch: "/dns/v1/projects/{project}/managedZones/{managed_zone}/rrsets/{name}/{type}"
    };
    option (google.api.method_signature) = "project,managed_zone,name,type,resource_record_set_resource";
  }

}

// The ResponsePolicies API.
service ResponsePolicies {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Creates a new Response Policy
  rpc Create(CreateResponsePolicyRequest) returns (ResponsePolicy) {
    option (google.api.http) = {
      body: "response_policy_resource"
      post: "/dns/v1/projects/{project}/responsePolicies"
    };
    option (google.api.method_signature) = "project,response_policy_resource";
  }

  // Deletes a previously created Response Policy. Fails if the response policy is non-empty or still being referenced by a network.
  rpc Delete(DeleteResponsePolicyRequest) returns (DeleteResponsePolicyResponse) {
    option (google.api.http) = {
      delete: "/dns/v1/projects/{project}/responsePolicies/{response_policy}"
    };
    option (google.api.method_signature) = "project,response_policy";
  }

  // Fetches the representation of an existing Response Policy.
  rpc Get(GetResponsePolicyRequest) returns (ResponsePolicy) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/responsePolicies/{response_policy}"
    };
    option (google.api.method_signature) = "project,response_policy";
  }

  // Enumerates all Response Policies associated with a project.
  rpc List(ListResponsePoliciesRequest) returns (ResponsePoliciesListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/responsePolicies"
    };
    option (google.api.method_signature) = "project";
  }

  // Applies a partial update to an existing Response Policy.
  rpc Patch(PatchResponsePolicyRequest) returns (ResponsePoliciesPatchResponse) {
    option (google.api.http) = {
      body: "response_policy_resource"
      patch: "/dns/v1/projects/{project}/responsePolicies/{response_policy}"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_resource";
  }

  // Updates an existing Response Policy.
  rpc Update(UpdateResponsePolicyRequest) returns (ResponsePoliciesUpdateResponse) {
    option (google.api.http) = {
      body: "response_policy_resource"
      put: "/dns/v1/projects/{project}/responsePolicies/{response_policy}"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_resource";
  }

}

// The ResponsePolicyRules API.
service ResponsePolicyRules {
  option (google.api.default_host) =
    "dns.googleapis.com";

  option (google.api.oauth_scopes) =
    "https://www.googleapis.com/auth/ndev.clouddns.readwrite,"
    "https://www.googleapis.com/auth/cloud-platform";

  // Creates a new Response Policy Rule.
  rpc Create(CreateResponsePolicyRuleRequest) returns (ResponsePolicyRule) {
    option (google.api.http) = {
      body: "response_policy_rule_resource"
      post: "/dns/v1/projects/{project}/responsePolicies/{response_policy}/rules"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_rule_resource";
  }

  // Deletes a previously created Response Policy Rule.
  rpc Delete(DeleteResponsePolicyRuleRequest) returns (DeleteResponsePolicyRuleResponse) {
    option (google.api.http) = {
      delete: "/dns/v1/projects/{project}/responsePolicies/{response_policy}/rules/{response_policy_rule}"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_rule";
  }

  // Fetches the representation of an existing Response Policy Rule.
  rpc Get(GetResponsePolicyRuleRequest) returns (ResponsePolicyRule) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/responsePolicies/{response_policy}/rules/{response_policy_rule}"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_rule";
  }

  // Enumerates all Response Policy Rules associated with a project.
  rpc List(ListResponsePolicyRulesRequest) returns (ResponsePolicyRulesListResponse) {
    option (google.api.http) = {
      get: "/dns/v1/projects/{project}/responsePolicies/{response_policy}/rules"
    };
    option (google.api.method_signature) = "project,response_policy";
  }

  // Applies a partial update to an existing Response Policy Rule.
  rpc Patch(PatchResponsePolicyRuleRequest) returns (ResponsePolicyRulesPatchResponse) {
    option (google.api.http) = {
      body: "response_policy_rule_resource"
      patch: "/dns/v1/projects/{project}/responsePolicies/{response_policy}/rules/{response_policy_rule}"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_rule,response_policy_rule_resource";
  }

  // Updates an existing Response Policy Rule.
  rpc Update(UpdateResponsePolicyRuleRequest) returns (ResponsePolicyRulesUpdateResponse) {
    option (google.api.http) = {
      body: "response_policy_rule_resource"
      put: "/dns/v1/projects/{project}/responsePolicies/{response_policy}/rules/{response_policy_rule}"
    };
    option (google.api.method_signature) = "project,response_policy,response_policy_rule,response_policy_rule_resource";
  }

}

